name: update_role

on:
  workflow_dispatch:
    inputs:
      env_url:
        description: "Select source and target env's"
        type: choice
        default: "Source: SANDBOX, Target: PRODUCTION"
        options:
          - "Source: SANDBOX, Target: PRODUCTION"
          - "Source: SANDBOX, Target: SANDBOX"
          - "Source: PRODUCTION, Target: PRODUCTION"
          - "Source: PRODUCTION, Target: SANDBOX"
      source_role_id:
        description: "Source Role ID (Required to UPDATE_METADATA)"
        required: false
      target_role_id:
        description: "Target Role ID"
        required: true
      update_role_criteria:
        description: 'Update Role'
        required: true
        default: 'UPDATE_METADATA'
        type: choice
        options:
          - UPDATE_METADATA
          - ASSIGN_POLICY
      list_of_policy_ids_to_assign:
        description: "List of Policy IDs to assign"
        required: false
      source_account_access_token:
        description: "Access token of the Source Account (Required to UPDATE_METADATA)"
        required: false
      target_account_access_token:
        description: "Access token of the Target Account"
        required: true
      source_account_id:
        description: "Source Account ID. If not provided, will use the repository variable"
        required: false
      target_account_id:
        description: "Target Account ID. If not provided, will use the repository variable"
        required: false


jobs:
  execute-update-role-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests
      
      - name: Parse and map environment URLs
        id: map_envs
        shell: bash
        run: |
          input="${{ github.event.inputs.env_url }}"

          source_name=$(echo "$input" | sed -n 's/Source: \([^,]*\),.*/\1/p' | xargs)
          target_name=$(echo "$input" | sed -n 's/.*Target: \(.*\)/\1/p' | xargs)

          get_env_url() {
            case "$1" in
              SANDBOX) echo "https://manage.skyflowapis-preview.com" ;;
              PRODUCTION) echo "https://manage.skyflowapis.com" ;;
              *) echo "Invalid environment: $1" >&2; exit 1 ;;
            esac
          }

          # Resolve URLs
          source_url=$(get_env_url "$source_name")
          target_url=$(get_env_url "$target_name")

          echo "source_url=$source_url" >> $GITHUB_OUTPUT
          echo "target_url=$target_url" >> $GITHUB_OUTPUT

      - name: Run Python script
        env:
          SOURCE_ROLE_ID: ${{ github.event.inputs.source_role_id }}
          TARGET_ROLE_ID: ${{ github.event.inputs.target_role_id }}
          UPDATE_ROLE_CRITERIA: ${{ github.event.inputs.update_role_criteria }}
          POLICY_IDS: ${{ github.event.inputs.list_of_policy_ids_to_assign }}
          SOURCE_ACCOUNT_AUTH: ${{ github.event.inputs.source_account_access_token }}
          TARGET_ACCOUNT_AUTH: ${{ github.event.inputs.target_account_access_token }}
          SOURCE_ACCOUNT_ID: ${{ github.event.inputs.source_account_id != '' && github.event.inputs.source_account_id || vars.SOURCE_ACCOUNT_ID }}
          TARGET_ACCOUNT_ID: ${{ github.event.inputs.target_account_id != '' && github.event.inputs.target_account_id || vars.TARGET_ACCOUNT_ID }}
          SOURCE_ENV_URL: ${{ steps.map_envs.outputs.source_url }}
          TARGET_ENV_URL: ${{ steps.map_envs.outputs.target_url }}
        run: python3 update_role.py
