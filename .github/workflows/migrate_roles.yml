name: roles_migration

on:
  workflow_dispatch:
    inputs:
      role_ids:
        description: "List of RoleId's to be migrated. Either of role_ids or migrate_all_roles is required."
        required: false
        default: []
      migrate_all_roles:
        type: boolean
        description: "Migrates all the roles from source vault to target vault. Either of role_ids or migrate_all_roles is required. It is set to False by default."
        required: false
        default: false
      source_vault_id:
        type: string
        description: "Source Vault ID. Required if migrate_all_roles if checked."
        required: false
      skip_role_creation_if_role_exists:
        type: boolean
        description: "Enable this to avoid duplicate role creation in case of migrating all the roles. It is set to False by default."
        required: false
        default: false
      target_vault_id:
        description: "Target Vault ID"
        required: true
      source_account_access_token:
        description: "Access token of the Source Account"
        required: true
      target_account_access_token:
        description: "Access token of the Target Account"
        required: true

jobs:
  execute-roles-migration-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install requests

      - name: Run Python script
        env:
          ROLE_IDS: ${{ github.event.inputs.role_ids }}
          MIGRATE_ALL_ROLES: ${{ github.event.inputs.migrate_all_roles }}
          SKIP_ROLE_CREATION_IF_ROLE_EXISTS: ${{ github.event.inputs.skip_role_creation_if_role_exists }}
          SOURCE_VAULT_ID: ${{ github.event.inputs.source_vault_id }}
          TARGET_VAULT_ID: ${{ github.event.inputs.target_vault_id }}
          SOURCE_ACCOUNT_AUTH: ${{ github.event.inputs.source_account_access_token }}
          TARGET_ACCOUNT_AUTH: ${{ github.event.inputs.target_account_access_token }}
          SOURCE_ACCOUNT_ID: ${{ vars.SOURCE_ACCOUNT_ID }}
          TARGET_ACCOUNT_ID: ${{ vars.TARGET_ACCOUNT_ID }}
          SOURCE_ENV_URL: ${{ vars.SOURCE_ENV_URL }}
          TARGET_ENV_URL: ${{ vars.TARGET_ENV_URL }}
        run: python3 migrate_roles.py
